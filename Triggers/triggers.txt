DELIMITER //
create procedure check_stock(IN quantity int, IN stock int)
BEGIN
if quantity > stock
then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Insufficient Stock';
end if;
end//
DELIMITER ;

DELIMITER //
create procedure reduce_stock(IN quantity int, IN p_id int)
BEGIN
update product set stock = (select * from (select stock from product where product_id = p_id) as stck) - quantity;
end//
DELIMITER ;

DELIMITER //
create procedure check_if_user_coupon(IN c1 int, IN c2 int)
BEGIN
if (select count(*) from customer_coupon where customer_id = c1 and coupon_id = 2) = 0 
then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'No such coupon';
endif//
end//
DELIMITER ;

DELIMITER //
create procedure use_up_coupon(IN c1 int, IN c2 int)
BEGIN
delete from Customer_Coupon where customer_id = c1 and coupon_id = c2;
end//
DELIMITER ; 

	
create trigger update_cost
after insert
on Cart
for each row
update customer
set cart_cost = (select * from (select customer.cart_cost from customer where customer.customer_id=new.customer_id) as cst) + (new.quantity * (select product.price from product where product.product_id = new.product_id))
where customer_id = new.customer_id

create trigger stock_limit_cart
before insert
on Cart
for each row
call check_stock((select stock from product where product_id = new.product_id), new.quantity);

create trigger stock_limit_order
before insert
on Orders
for each row
call check_stock((select stock from product where product_id = new.product_id), new.quantity);

create trigger coupon_exists_with_user
before insert
on Orders
for each row
call check_if_user_coupon(customer_id, coupon_id);

create trigger coupon_order
after insert
on Orders
for each row
call use_up_coupon(customer_id, coupon_id);